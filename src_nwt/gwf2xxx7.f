      MODULE GWFXXXMODULE
        TYPE XXXDATAITEM
          CHARACTER (LEN=16) :: TEXT
          INTEGER :: NXXXDIM
  !        INTEGER :: NXXXMAXENTRIES
          INTEGER :: NXXXOP
          INTEGER :: NXXXMULT
          REAL, DIMENSION(:,:), ALLOCATABLE    :: MULTIPLIER
          REAL, DIMENSION(:,:), ALLOCATABLE    :: RATE
          INTEGER, DIMENSION(:,:), ALLOCATABLE :: LAYER
        END TYPE XXXDATAITEM
C       
        INTEGER, SAVE, POINTER                          ::NXXXITEMS
        INTEGER,  POINTER                               ::IXXXCB
        TYPE(XXXDATAITEM), SAVE, DIMENSION(:), POINTER  ::XXXDATA
        TYPE GWFXXXTYPE
          INTEGER,  POINTER                          ::NXXXITEMS
          INTEGER,  POINTER                          ::IXXXCB
          TYPE(XXXDATAITEM), DIMENSION(:), POINTER   ::XXXDATA
        END TYPE GWFXXXTYPE
        TYPE(GWFXXXTYPE), SAVE ::GWFXXXDAT(10)
      END MODULE GWFXXXMODULE


      SUBROUTINE GWF2XXX7AR(IN,IGRID)
C     ******************************************************************
C     ALLOCATE ARRAY STORAGE FOR XXX
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
      USE GLOBAL,      ONLY:IOUT,NCOL,NROW,IFREFM
      USE GWFXXXMODULE,ONLY:NXXXITEMS,IXXXCB,XXXDATA
C
      CHARACTER*200 LINE
      CHARACTER (LEN=16) ::  TEXT
!      CHARACTER*4 PTYP
C
C-------FORMATS
 2000 FORMAT(1X,'CELL-BY-CELL FLOWS WILL BE SAVED ON UNIT ',I4)
 2010 FORMAT(1X,'XXX ITEM ',A16,' WITH DIMENSION = ',I5)
 2020 FORMAT(1X,'ILLEGAL XXX OPTION CODE (NRCHOP = ',I5,
     &       ') -- SIMULATION ABORTING')
 2030 FORMAT(1X,'OPTION 1 -- RATE APPLIED TO TOP LAYER')
 2040 FORMAT(1X,'OPTION 2 -- RATE APPLIED TO ONE SPECIFIED NODE IN',
     1     ' EACH VERTICAL COLUMN')
 2050 FORMAT(1X,'OPTION 3 -- RATE APPLIED TO HIGHEST ACTIVE NODE IN',
     1     ' EACH VERTICAL COLUMN')
 2060 FORMAT(1X,'MULTIPLIERS WILL BE APPLIED TO RATE FOR XXX ITEM',
     !     I5, '(', A16, ')')
C
C     ------------------------------------------------------------------
C
CC-------ALLOCATE SCALAR VARIABLES.
      ALLOCATE(NXXXITEMS,IXXXCB)
C
CC------IDENTIFY PACKAGE.
      WRITE(IOUT,1)IN
    1 FORMAT(1X,/1X,'XXX -- MYSTERY PACKAGE, VERSION 1, 10/1/2012',
     1' INPUT READ FROM UNIT ',I4)
C
CC------READ NXXXITEMS AND IXXXCB.
      CALL URDCOM(IN,IOUT,LINE)
      LLOC=1
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,NXXXITEMS,R,IOUT,IN)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IXXXCB,R,IOUT,IN)
C
CC------IF CELL-BY-CELL FLOWS ARE TO BE SAVED, THEN PRINT UNIT NUMBER.
      IF(IXXXCB.GT.0) WRITE(IOUT,2000) IXXXCB
C
CC------ALLOCATE SPACE FOR EACH ITEM
      ALLOCATE(XXXDATA(NXXXITEMS))
C
CC------READ DATA FOR EACH ITEM
      DO K = 1, NXXXITEMS
        CALL URDCOM(IN,IOUT,LINE)
        LLOC=1
        CALL URWORD(LINE,LLOC,ISTART,ISTOP,1,I,R,IOUT,IN)
        TEXT = LINE(ISTART:ISTOP)
        XXXDATA(K)%TEXT = ADJUSTR(TEXT)
        CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,I,R,IOUT,IN)
        XXXDATA(K)%NXXXDIM = I
        WRITE(IOUT,2010) XXXDATA(K)%TEXT, XXXDATA(K)%NXXXDIM
        SELECT CASE (XXXDATA(K)%NXXXDIM)
C           POINTS          
          CASE (0)
C           LINES          
          CASE (1)
C           ARRAYS          
          CASE (2)
            CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,I,R,IOUT,IN)
            XXXDATA(K)%NXXXOP = I
C             CHECK TO SEE THAT OPTIONS ARE LEGAL
            IF(XXXDATA(K)%NXXXOP.LT.1.OR.XXXDATA(K)%NXXXOP.GT.3) THEN
              WRITE(IOUT,2020) XXXDATA(K)%NXXXOP
              CALL USTOP(' ')
            END IF
            CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,I,R,IOUT,IN)
            XXXDATA(K)%NXXXMULT = I
C             ALLOCATE MEMORY FOR ITEM
            ALLOCATE(XXXDATA(K)%RATE(NCOL,NROW))
            ALLOCATE(XXXDATA(K)%MULTIPLIER(NCOL,NROW))
            DO IR=1,NROW
              DO IC=1,NCOL
                XXXDATA(K)%RATE(IC,IR)=0.0
                XXXDATA(K)%MULTIPLIER(IC,IR)=1.0
              END DO
            END DO
            IF ( XXXDATA(K)%NXXXOP.EQ.2.OR.XXXDATA(K)%NXXXOP.EQ.3) THEN
              ALLOCATE(XXXDATA(K)%LAYER(NCOL,NROW))
            END IF
C             WRITE SUMMARY INFORMATION
            IF(XXXDATA(K)%NXXXOP.EQ.1)   WRITE(IOUT,2030)
            IF(XXXDATA(K)%NXXXOP.EQ.2)   WRITE(IOUT,2040)
            IF(XXXDATA(K)%NXXXOP.EQ.3)   WRITE(IOUT,2050)
            IF(XXXDATA(K)%NXXXMULT.NE.0) WRITE(IOUT,2060)
        END SELECT
      END DO
C
CC------RETURN
      CALL SGWF2XXX7PSV(IGRID)
      RETURN
      END SUBROUTINE GWF2XXX7AR

      SUBROUTINE GWF2XXX7RP(IN,IGRID)
C     ******************************************************************
C     READ RECHARGE DATA FOR STRESS PERIOD
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
      USE GLOBAL,      ONLY:IOUT
      USE GWFXXXMODULE,ONLY:NXXXITEMS,XXXDATA
      
      CHARACTER (LEN=200) :: LINE
C     ------------------------------------------------------------------
C
C-------FORMATS
 2000   FORMAT(1X,/1X,'REUSING XXX FROM LAST STRESS PERIOD')
C
CC------SET POINTERS FOR THE CURRENT GRID.
      CALL SGWF2XXX7PNT(IGRID)
C
CC------READ FLAG SHOWING WHETHER DATA IS TO BE REUSED.
      CALL URDCOM(IN,IOUT,LINE)
      LLOC=1
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,INXXX,R,IOUT,IN)
C
CC------TEST INXXX TO SEE HOW TO DEFINE RECH.
      IF(INXXX.LT.1) THEN
C
CC------INXXX<1, SO REUSE XXX ARRAYS FROM LAST STRESS PERIOD.
        WRITE(IOUT,2000)
C
C-------CYCLE THROUGH ITEMS
      ELSE
        DO K = 1, NXXXITEMS
          SELECT CASE (XXXDATA(K)%NXXXDIM)
            CASE (0)
            CASE (1)
            CASE (2)
              CALL XXX2DITEMREAD(IN,XXXDATA(K))
          END SELECT
        END DO      
      END IF
C
C6------RETURN
      RETURN
      END SUBROUTINE GWF2XXX7RP
      SUBROUTINE GWF2XXX7FM(IGRID)
C     ******************************************************************
C     SUBTRACT RECHARGE FROM RHS
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
      USE GLOBAL,      ONLY:NCOL,NROW,NLAY,IBOUND,RHS
      USE GWFXXXMODULE,ONLY:NXXXITEMS,XXXDATA
C     ------------------------------------------------------------------
C
C-------SET POINTERS FOR THE CURRENT GRID.
      CALL SGWF2XXX7PNT(IGRID)
C
C-------CYCLE THROUGH EACH ITEM
      DO K = 1, NXXXITEMS
        SELECT CASE (XXXDATA(K)%NXXXDIM)
          CASE (0)
          CASE (1)
          CASE (2)
            CALL XXX2DITEMFORMULATE(XXXDATA(K))
        END SELECT
      END DO      
C
C-------RETURN
      RETURN
      END SUBROUTINE GWF2XXX7FM
      SUBROUTINE GWF2XXX7BD(KSTP,KPER,IGRID)
C     ******************************************************************
C     CALCULATE VOLUMETRIC BUDGET FOR RECHARGE
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
      USE GLOBAL,      ONLY:IOUT,NCOL,NROW,NLAY,IBOUND,BUFF
      USE GWFBASMODULE,ONLY:MSUM,VBVL,VBNM,ICBCFL,DELT,PERTIM,TOTIM
      USE GWFXXXMODULE,ONLY:NXXXITEMS,XXXDATA
C     ------------------------------------------------------------------
C
C1------SET POINTERS FOR THE CURRENT GRID.
      CALL SGWF2XXX7PNT(IGRID)
C
C-------CYCLE THROUGH ITEMS
      DO K = 1, NXXXITEMS
        SELECT CASE (XXXDATA(K)%NXXXDIM)
          CASE (0)
          CASE (1)
          CASE (2)
            CALL XXX2DITEMBUDGET(KSTP,KPER,XXXDATA(K))
        END SELECT
      END DO      
C
C13-----RETURN
      RETURN
      END SUBROUTINE GWF2XXX7BD
      SUBROUTINE GWF2XXX7DA(IGRID)
C  Deallocate XXX DATA
      USE GWFXXXMODULE
C
        DEALLOCATE(GWFXXXDAT(IGRID)%NXXXITEMS)
        DEALLOCATE(GWFXXXDAT(IGRID)%IXXXCB)
        DEALLOCATE(GWFXXXDAT(IGRID)%XXXDATA)
C
      RETURN
      END SUBROUTINE GWF2XXX7DA
      SUBROUTINE SGWF2XXX7PNT(IGRID)
C  Set XXX pointers for grid.
      USE GWFXXXMODULE
C
        NXXXITEMS=>GWFXXXDAT(IGRID)%NXXXITEMS
        IXXXCB=>GWFXXXDAT(IGRID)%IXXXCB
        XXXDATA=>GWFXXXDAT(IGRID)%XXXDATA
C
      RETURN
      END SUBROUTINE SGWF2XXX7PNT
      SUBROUTINE SGWF2XXX7PSV(IGRID)
C  Save XXX pointers for grid.
      USE GWFXXXMODULE
C
        GWFXXXDAT(IGRID)%NXXXITEMS=>NXXXITEMS
        GWFXXXDAT(IGRID)%IXXXCB=>IXXXCB
        GWFXXXDAT(IGRID)%XXXDATA=>XXXDATA
C
      RETURN
      END SUBROUTINE SGWF2XXX7PSV

      SUBROUTINE XXX2DITEMREAD(IN,DATAITEM)
C     ******************************************************************
C     READ RECHARGE DATA FOR STRESS PERIOD
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
      USE GLOBAL,      ONLY:IOUT,NCOL,NROW,NLAY,DELR,DELC
      USE GWFXXXMODULE,ONLY:XXXDATAITEM
C
      INTEGER, INTENT(IN) :: IN
      TYPE (XXXDATAITEM), INTENT(INOUT) :: DATAITEM
C
      CHARACTER*200 LINE
      CHARACTER*24 ANAME(3)
C
      DATA ANAME(1) /'                    RATE'/
      DATA ANAME(2) /'             LAYER INDEX'/
      DATA ANAME(3) /'         RATE MULTIPLIER'/
C     ------------------------------------------------------------------
C
C-------FORMATS
 2000   FORMAT(1X,/1X,'REUSING ',A,1X,A,1X,
     2                'DATA FROM LAST STRESS PERIOD')
 2010   FORMAT(1X,/1X,'INVALID LAYER NUMBER IN IRCH FOR COLUMN',I4,
     1        '  ROW',I4,'  :',I4)
C
C-------INITIALIZE FLAGS
      INRATE = 0
      INLAY  = 0
      INMULT = 0
C
C-------READ FLAGS SHOWING WHETHER DATA FOR DATA ITEM IS TO BE REUSED.
      CALL URDCOM(IN,IOUT,LINE)
      LLOC=1
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,INRATE,R,IOUT,IN)
      IF (INRATE.LT.1) THEN
        WRITE(IOUT,2000) DATAITEM%TEXT,ANAME(1)
      END IF
      IF (DATAITEM%NXXXOP.EQ.2) THEN
        CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,INLAY,R,IOUT,IN)
        IF (INLAY.LT.1) THEN
          WRITE(IOUT,2000) DATAITEM%TEXT,ANAME(2)
        END IF
      END IF
      IF (DATAITEM%NXXXMULT.GT.0) THEN
        CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,INMULT,R,IOUT,IN)
        IF (INMULT.LT.1) THEN
          WRITE(IOUT,2000) DATAITEM%TEXT,ANAME(3)
        END IF
      END IF
C-------READ DATA
      IF (INRATE.GT.0) THEN
        CALL U2DREL(DATAITEM%RATE,ANAME(1),NROW,NCOL,0,IN,IOUT)
C---------MULTIPLY RATE BY CELL AREA TO GET VOLUMETRIC RATE.
        DO IR=1,NROW
          DO IC=1,NCOL
            DATAITEM%RATE(IC,IR)=DATAITEM%RATE(IC,IR)*DELR(IC)*DELC(IR)
          END DO
        END DO
      END IF      
      IF (INLAY.GT.0) THEN
        CALL U2DINT(DATAITEM%LAYER,ANAME(2),NROW,NCOL,0,IN,IOUT)
        DO IR=1,NROW
          DO IC=1,NCOL
            IL = DATAITEM%LAYER(IC,IR)
            IF(IL.LT.1 .OR. IL.GT.NLAY) THEN
              WRITE(IOUT,2010) IC,IR,IL
              CALL USTOP(' ')
            END IF
          END DO
        END DO
      END IF      
      IF (INMULT.GT.0) THEN
        CALL U2DREL(DATAITEM%MULTIPLIER,ANAME(3),NROW,NCOL,0,IN,IOUT)
      END IF      
C
C-------RETURN
      RETURN
      END SUBROUTINE XXX2DITEMREAD

      SUBROUTINE XXX2DITEMFORMULATE(DATAITEM)
C     ******************************************************************
C     SUBTRACT RECHARGE FROM RHS
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
      USE GLOBAL,      ONLY:NCOL,NROW,NLAY,IBOUND,RHS
      USE GWFXXXMODULE,ONLY:XXXDATAITEM
C
      TYPE (XXXDATAITEM), INTENT(IN) :: DATAITEM
C     ------------------------------------------------------------------
C
C-------DETERMINE WHICH RECHARGE OPTION.
      IF(DATAITEM%NXXXOP.EQ.1) THEN
C
C-------NRCHOP IS 1, SO RATE IS APPLIED TO THE TOP LAYER. LAYER INDEX IS 1.
        DO IR=1,NROW
          DO IC=1,NCOL
C-------------IF CELL IS VARIABLE HEAD, SUBTRACT RECHARGE RATE FROM
C-------------RIGHT-HAND-SIDE.
            IF(IBOUND(IC,IR,1).GT.0) THEN
              RHS(IC,IR,1)=RHS(IC,IR,1)-
     2          DATAITEM%RATE(IC,IR)*DATAITEM%MULTIPLIER(IC,IR)
            END IF
          END DO
        END DO
      ELSE IF(DATAITEM%NXXXOP.EQ.2) THEN
C
C-------NRCHOP IS 2, SO RECHARGE IS INTO LAYER IN INDICATOR ARRAY
        DO IR=1,NROW
          DO IC=1,NCOL
            IL=DATAITEM%LAYER(IC,IR)
C-------------IF THE CELL IS VARIABLE HEAD, SUBTRACT RECHARGE FROM
C-------------RIGHT-HAND-SIDE.
            IF(IL.EQ.0) CYCLE
            IF(IBOUND(IC,IR,IL).GT.0) THEN
              RHS(IC,IR,IL)=RHS(IC,IR,IL)-
     2          DATAITEM%RATE(IC,IR)*DATAITEM%MULTIPLIER(IC,IR)
            END IF
          END DO
        END DO
      ELSE
C
C-------NRCHOP IS 3, RECHARGE IS INTO HIGHEST VARIABLE-HEAD CELL, EXCEPT
C-------CANNOT PASS THROUGH CONSTANT HEAD NODE
        LROW: DO IR=1,NROW
          LCOL: DO IC=1,NCOL
            HLAY: DO IL=1,NLAY
C
C---------------IF CELL IS CONSTANT HEAD MOVE ON TO NEXT HORIZONTAL LOCATION.
              IF(IBOUND(IC,IR,IL).LT.0) EXIT HLAY
C
C---------------IF THE CELL IS VARIABLE HEAD, SUBTRACT RECHARGE FROM
C---------------RIGHT-HAND-SIDE AND MOVE TO NEXT HORIZONTAL LOCATION.
              IF(IBOUND(IC,IR,IL).GT.0) THEN
                RHS(IC,IR,IL)=RHS(IC,IR,IL)-
     2            DATAITEM%RATE(IC,IR)*DATAITEM%MULTIPLIER(IC,IR)
                EXIT HLAY
              END IF
            END DO HLAY
          END DO LCOL
        END DO LROW
      END IF
C
C-------RETURN
      RETURN
      END SUBROUTINE XXX2DITEMFORMULATE

      SUBROUTINE XXX2DITEMBUDGET(KSTP,KPER,DATAITEM)
C     ******************************************************************
C     CALCULATE VOLUMETRIC BUDGET FOR RECHARGE
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
      USE GLOBAL,      ONLY:IOUT,NCOL,NROW,NLAY,IBOUND,BUFF
      USE GWFBASMODULE,ONLY:MSUM,VBVL,VBNM,ICBCFL,DELT,PERTIM,TOTIM
      USE GWFXXXMODULE,ONLY:XXXDATAITEM,IXXXCB
C
      INTEGER, INTENT(IN) :: KSTP, KPER
      TYPE (XXXDATAITEM), INTENT(INOUT) :: DATAITEM

      REAL QMULT
      DOUBLE PRECISION RATIN,RATOUT,QQ
      CHARACTER*16 TEXT
C     ------------------------------------------------------------------
C
C-------CLEAR THE RATE ACCUMULATORS.
      ZERO=0.
      RATIN=ZERO
      RATOUT=ZERO
C
C-------CLEAR THE BUFFER & SET FLAG FOR SAVING CELL-BY-CELL FLOW TERMS.
      DO 2 IL=1,NLAY
      DO 2 IR=1,NROW
      DO 2 IC=1,NCOL
      BUFF(IC,IR,IL)=ZERO
    2 CONTINUE
      IBD=0
      IF(IXXXCB.GT.0) IBD=ICBCFL
      
      TEXT = DATAITEM%TEXT
C
C-------DETERMINE THE RECHARGE OPTION.
      IF(DATAITEM%NXXXOP.EQ.1) THEN
C
C-------NRCHOP=1, SO RECH GOES INTO LAYER 1. PROCESS EACH HORIZONTAL
C-------CELL LOCATION.
        DO 10 IR=1,NROW
        DO 10 IC=1,NCOL
C
C-------IF CELL IS VARIABLE HEAD, THEN DO BUDGET FOR IT.
        IF(IBOUND(IC,IR,1).GT.0) THEN
          
          Q=DATAITEM%RATE(IC,IR)*DATAITEM%MULTIPLIER(IC,IR)
          QQ=Q
C
C-------ADD RECH TO BUFF.
          BUFF(IC,IR,1)=Q
C
C-------IF RECH POSITIVE ADD IT TO RATIN, ELSE ADD IT TO RATOUT.
          IF(Q.GE.ZERO) THEN
            RATIN=RATIN+QQ
          ELSE
            RATOUT=RATOUT-QQ
          END IF
        END IF
   10   CONTINUE
      ELSE IF(DATAITEM%NXXXOP.EQ.2) THEN
C
C-------NRCHOP=2, RECH IS IN LAYER SPECIFIED IN INDICATOR ARRAY(IRCH).
C-------PROCESS EACH HORIZONTAL CELL LOCATION.
        DO 20 IR=1,NROW
        DO 20 IC=1,NCOL
C
C-------GET LAYER INDEX FROM INDICATOR ARRAY(IRCH).
        IL=DATAITEM%LAYER(IC,IR)
C
C-------IF CELL IS VARIABLE HEAD, THEN DO BUDGET FOR IT.
        IF(IL.EQ.0) GO TO 20
        IF(IBOUND(IC,IR,IL).GT.0) THEN

          Q=DATAITEM%RATE(IC,IR)*DATAITEM%MULTIPLIER(IC,IR)
          QQ=Q
C
C-------ADD RECHARGE TO BUFF.
          BUFF(IC,IR,IL)=Q
C
C-------IF RECHARGE IS POSITIVE ADD TO RATIN, ELSE ADD IT TO RATOUT.
          IF(Q.GE.ZERO) THEN
            RATIN=RATIN+QQ
          ELSE
            RATOUT=RATOUT-QQ
          END IF
        END IF
   20   CONTINUE
      ELSE
C
C-------NRCHOP=3; RECHARGE IS INTO HIGHEST CELL IN A VERTICAL COLUMN
C-------THAT IS NOT NO FLOW.  PROCESS EACH HORIZONTAL CELL LOCATION.
        DO 30 IR=1,NROW
        DO 29 IC=1,NCOL
C
C-------INITIALIZE IRCH TO 1, AND LOOP THROUGH CELLS IN A VERTICAL
C-------COLUMN TO FIND WHERE TO PLACE RECHARGE.
        DATAITEM%LAYER(IC,IR)=1
        DO 28 IL=1,NLAY
C
C-------IF CELL IS CONSTANT HEAD, MOVE ON TO NEXT HORIZONTAL LOCATION.
        IF(IBOUND(IC,IR,IL).LT.0) GO TO 29
C
C-------IF CELL IS VARIABLE HEAD, THEN DO BUDGET FOR IT.
        IF (IBOUND(IC,IR,IL).GT.0) THEN

          Q=DATAITEM%RATE(IC,IR)*DATAITEM%MULTIPLIER(IC,IR)
          QQ=Q
C
C-------ADD RECHARGE TO BUFFER, AND STORE LAYER NUMBER IN DATAITEM%LAYER(IC,IR).
          BUFF(IC,IR,IL)=Q
          DATAITEM%LAYER(IC,IR)=IL
C
C-------IF RECH IS POSITIVE ADD IT TO RATIN, ELSE ADD IT TO RATOUT.
          IF(Q.GE.ZERO) THEN
            RATIN=RATIN+QQ
          ELSE
            RATOUT=RATOUT-QQ
          END IF
          GO TO 29
        END IF
28      CONTINUE
29      CONTINUE
30      CONTINUE
C
      END IF
C
C-------IF CELL-BY-CELL FLOW TERMS SHOULD BE SAVED, CALL APPROPRIATE
C-------UTILITY MODULE TO WRITE THEM.
100   IF(IBD.EQ.1) CALL UBUDSV(KSTP,KPER,TEXT,IRCHCB,BUFF,NCOL,NROW,
     1                          NLAY,IOUT)
      IF(IBD.EQ.2) CALL UBDSV3(KSTP,KPER,TEXT,IRCHCB,BUFF,IRCH,NRCHOP,
     1                   NCOL,NROW,NLAY,IOUT,DELT,PERTIM,TOTIM,IBOUND)
C
C-------MOVE TOTAL RECHARGE RATE INTO VBVL FOR PRINTING BY BAS1OT.
      ROUT=RATOUT
      RIN=RATIN
      VBVL(4,MSUM)=ROUT
      VBVL(3,MSUM)=RIN
C
C-------ADD RECHARGE FOR TIME STEP TO RECHARGE ACCUMULATOR IN VBVL.
      VBVL(2,MSUM)=VBVL(2,MSUM)+ROUT*DELT
      VBVL(1,MSUM)=VBVL(1,MSUM)+RIN*DELT
C
C-------MOVE BUDGET TERM LABELS TO VBNM FOR PRINT BY MODULE BAS_OT.
      VBNM(MSUM)=TEXT
C
C-------INCREMENT BUDGET TERM COUNTER.
      MSUM=MSUM+1
C
C-------RETURN
      RETURN
      END SUBROUTINE XXX2DITEMBUDGET
